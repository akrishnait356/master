{
  "version": 3,
  "sources": ["../../../../../node_modules/msw/lib/core/utils/toResponseInit.mjs", "../../../../../node_modules/msw/lib/core/utils/internal/isObject.mjs", "../../../../../node_modules/msw/lib/core/utils/internal/mergeRight.mjs", "../../../../../node_modules/@open-draft/deferred-promise/build/index.mjs", "../../../../../node_modules/@mswjs/interceptors/lib/browser/chunk-KK6APRON.mjs", "../../../../../node_modules/@mswjs/interceptors/lib/browser/chunk-KRADPSOF.mjs", "../../../../../node_modules/@mswjs/interceptors/lib/browser/chunk-XILA3UPG.mjs", "../../../../../node_modules/msw/lib/browser/index.mjs"],
  "sourcesContent": ["function toResponseInit(response) {\n  return {\n    status: response.status,\n    statusText: response.statusText,\n    headers: Object.fromEntries(response.headers.entries())\n  };\n}\nexport {\n  toResponseInit\n};\n", "function isObject(value) {\n  return value != null && typeof value === \"object\" && !Array.isArray(value);\n}\nexport {\n  isObject\n};\n", "import { isObject } from './isObject.mjs';\nfunction mergeRight(left, right) {\n  return Object.entries(right).reduce((result, [key, rightValue]) => {\n    const leftValue = result[key];\n    if (Array.isArray(leftValue) && Array.isArray(rightValue)) {\n      result[key] = leftValue.concat(rightValue);\n      return result;\n    }\n    if (isObject(leftValue) && isObject(rightValue)) {\n      result[key] = mergeRight(leftValue, rightValue);\n      return result;\n    }\n    result[key] = rightValue;\n    return result;\n  }, Object.assign({}, left));\n}\nexport {\n  mergeRight\n};\n", "// src/createDeferredExecutor.ts\nfunction createDeferredExecutor() {\n  const executor = (resolve, reject) => {\n    executor.state = \"pending\";\n    executor.resolve = (data) => {\n      if (executor.state !== \"pending\") {\n        return;\n      }\n      executor.result = data;\n      const onFulfilled = (value) => {\n        executor.state = \"fulfilled\";\n        return value;\n      };\n      return resolve(\n        data instanceof Promise ? data : Promise.resolve(data).then(onFulfilled)\n      );\n    };\n    executor.reject = (reason) => {\n      if (executor.state !== \"pending\") {\n        return;\n      }\n      queueMicrotask(() => {\n        executor.state = \"rejected\";\n      });\n      return reject(executor.rejectionReason = reason);\n    };\n  };\n  return executor;\n}\n\n// src/DeferredPromise.ts\nvar DeferredPromise = class extends Promise {\n  #executor;\n  resolve;\n  reject;\n  constructor(executor = null) {\n    const deferredExecutor = createDeferredExecutor();\n    super((originalResolve, originalReject) => {\n      deferredExecutor(originalResolve, originalReject);\n      executor?.(deferredExecutor.resolve, deferredExecutor.reject);\n    });\n    this.#executor = deferredExecutor;\n    this.resolve = this.#executor.resolve;\n    this.reject = this.#executor.reject;\n  }\n  get state() {\n    return this.#executor.state;\n  }\n  get rejectionReason() {\n    return this.#executor.rejectionReason;\n  }\n  then(onFulfilled, onRejected) {\n    return this.#decorate(super.then(onFulfilled, onRejected));\n  }\n  catch(onRejected) {\n    return this.#decorate(super.catch(onRejected));\n  }\n  finally(onfinally) {\n    return this.#decorate(super.finally(onfinally));\n  }\n  #decorate(promise) {\n    return Object.defineProperties(promise, {\n      resolve: { configurable: true, value: this.resolve },\n      reject: { configurable: true, value: this.reject }\n    });\n  }\n};\nexport {\n  DeferredPromise,\n  createDeferredExecutor\n};\n", "// src/utils/uuid.ts\nfunction uuidv4() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n    const r = Math.random() * 16 | 0;\n    const v = c == \"x\" ? r : r & 3 | 8;\n    return v.toString(16);\n  });\n}\n\n// src/utils/RequestController.ts\nimport { invariant } from \"outvariant\";\nimport { DeferredPromise } from \"@open-draft/deferred-promise\";\nvar RequestController = class {\n  constructor(request) {\n    this.request = request;\n    this.responsePromise = new DeferredPromise();\n  }\n  respondWith(response) {\n    invariant(\n      this.responsePromise.state === \"pending\",\n      'Failed to respond to \"%s %s\" request: the \"request\" event has already been responded to.',\n      this.request.method,\n      this.request.url\n    );\n    this.responsePromise.resolve(response);\n  }\n};\n\n// src/utils/toInteractiveRequest.ts\nfunction toInteractiveRequest(request) {\n  const requestController = new RequestController(request);\n  Reflect.set(\n    request,\n    \"respondWith\",\n    requestController.respondWith.bind(requestController)\n  );\n  return {\n    interactiveRequest: request,\n    requestController\n  };\n}\n\n// src/utils/emitAsync.ts\nasync function emitAsync(emitter, eventName, ...data) {\n  const listners = emitter.listeners(eventName);\n  if (listners.length === 0) {\n    return;\n  }\n  for (const listener of listners) {\n    await listener.apply(emitter, data);\n  }\n}\n\nexport {\n  uuidv4,\n  toInteractiveRequest,\n  emitAsync\n};\n", "import {\n  emitAsync,\n  toInteractiveRequest,\n  uuidv4\n} from \"./chunk-KK6APRON.mjs\";\nimport {\n  IS_PATCHED_MODULE,\n  Interceptor\n} from \"./chunk-S72SKXXQ.mjs\";\n\n// src/interceptors/fetch/index.ts\nimport { invariant } from \"outvariant\";\nimport { DeferredPromise } from \"@open-draft/deferred-promise\";\nimport { until } from \"@open-draft/until\";\n\n// src/utils/isPropertyAccessible.ts\nfunction isPropertyAccessible(obj, key) {\n  try {\n    obj[key];\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n// src/interceptors/fetch/index.ts\nvar _FetchInterceptor = class extends Interceptor {\n  constructor() {\n    super(_FetchInterceptor.symbol);\n  }\n  checkEnvironment() {\n    return typeof globalThis !== \"undefined\" && typeof globalThis.fetch !== \"undefined\";\n  }\n  setup() {\n    const pureFetch = globalThis.fetch;\n    invariant(\n      !pureFetch[IS_PATCHED_MODULE],\n      'Failed to patch the \"fetch\" module: already patched.'\n    );\n    globalThis.fetch = async (input, init) => {\n      var _a;\n      const requestId = uuidv4();\n      const request = new Request(input, init);\n      this.logger.info(\"[%s] %s\", request.method, request.url);\n      const { interactiveRequest, requestController } = toInteractiveRequest(request);\n      this.logger.info(\n        'emitting the \"request\" event for %d listener(s)...',\n        this.emitter.listenerCount(\"request\")\n      );\n      this.emitter.once(\"request\", ({ requestId: pendingRequestId }) => {\n        if (pendingRequestId !== requestId) {\n          return;\n        }\n        if (requestController.responsePromise.state === \"pending\") {\n          requestController.responsePromise.resolve(void 0);\n        }\n      });\n      this.logger.info(\"awaiting for the mocked response...\");\n      const signal = interactiveRequest.signal;\n      const requestAborted = new DeferredPromise();\n      signal.addEventListener(\n        \"abort\",\n        () => {\n          requestAborted.reject(signal.reason);\n        },\n        { once: true }\n      );\n      const resolverResult = await until(async () => {\n        const listenersFinished = emitAsync(this.emitter, \"request\", {\n          request: interactiveRequest,\n          requestId\n        });\n        await Promise.race([\n          requestAborted,\n          // Put the listeners invocation Promise in the same race condition\n          // with the request abort Promise because otherwise awaiting the listeners\n          // would always yield some response (or undefined).\n          listenersFinished,\n          requestController.responsePromise\n        ]);\n        this.logger.info(\"all request listeners have been resolved!\");\n        const mockedResponse2 = await requestController.responsePromise;\n        this.logger.info(\"event.respondWith called with:\", mockedResponse2);\n        return mockedResponse2;\n      });\n      if (requestAborted.state === \"rejected\") {\n        return Promise.reject(requestAborted.rejectionReason);\n      }\n      if (resolverResult.error) {\n        return Promise.reject(createNetworkError(resolverResult.error));\n      }\n      const mockedResponse = resolverResult.data;\n      if (mockedResponse && !((_a = request.signal) == null ? void 0 : _a.aborted)) {\n        this.logger.info(\"received mocked response:\", mockedResponse);\n        if (isPropertyAccessible(mockedResponse, \"type\") && mockedResponse.type === \"error\") {\n          this.logger.info(\n            \"received a network error response, rejecting the request promise...\"\n          );\n          return Promise.reject(createNetworkError(mockedResponse));\n        }\n        const responseClone = mockedResponse.clone();\n        this.emitter.emit(\"response\", {\n          response: responseClone,\n          isMockedResponse: true,\n          request: interactiveRequest,\n          requestId\n        });\n        const response = new Response(mockedResponse.body, mockedResponse);\n        Object.defineProperty(response, \"url\", {\n          writable: false,\n          enumerable: true,\n          configurable: false,\n          value: request.url\n        });\n        return response;\n      }\n      this.logger.info(\"no mocked response received!\");\n      return pureFetch(request).then((response) => {\n        const responseClone = response.clone();\n        this.logger.info(\"original fetch performed\", responseClone);\n        this.emitter.emit(\"response\", {\n          response: responseClone,\n          isMockedResponse: false,\n          request: interactiveRequest,\n          requestId\n        });\n        return response;\n      });\n    };\n    Object.defineProperty(globalThis.fetch, IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true\n    });\n    this.subscriptions.push(() => {\n      Object.defineProperty(globalThis.fetch, IS_PATCHED_MODULE, {\n        value: void 0\n      });\n      globalThis.fetch = pureFetch;\n      this.logger.info(\n        'restored native \"globalThis.fetch\"!',\n        globalThis.fetch.name\n      );\n    });\n  }\n};\nvar FetchInterceptor = _FetchInterceptor;\nFetchInterceptor.symbol = Symbol(\"fetch\");\nfunction createNetworkError(cause) {\n  return Object.assign(new TypeError(\"Failed to fetch\"), {\n    cause\n  });\n}\n\nexport {\n  FetchInterceptor\n};\n", "import {\n  decodeBuffer,\n  encodeBuffer,\n  isResponseWithoutBody,\n  toArrayBuffer\n} from \"./chunk-3YG2666Q.mjs\";\nimport {\n  emitAsync,\n  toInteractiveRequest,\n  uuidv4\n} from \"./chunk-KK6APRON.mjs\";\nimport {\n  IS_PATCHED_MODULE,\n  Interceptor\n} from \"./chunk-S72SKXXQ.mjs\";\n\n// src/interceptors/XMLHttpRequest/index.ts\nimport { invariant as invariant2 } from \"outvariant\";\n\n// src/interceptors/XMLHttpRequest/XMLHttpRequestProxy.ts\nimport { until } from \"@open-draft/until\";\n\n// src/interceptors/XMLHttpRequest/XMLHttpRequestController.ts\nimport { invariant } from \"outvariant\";\nimport { isNodeProcess } from \"is-node-process\";\n\n// src/interceptors/XMLHttpRequest/utils/concatArrayBuffer.ts\nfunction concatArrayBuffer(left, right) {\n  const result = new Uint8Array(left.byteLength + right.byteLength);\n  result.set(left, 0);\n  result.set(right, left.byteLength);\n  return result;\n}\n\n// src/interceptors/XMLHttpRequest/polyfills/EventPolyfill.ts\nvar EventPolyfill = class {\n  constructor(type, options) {\n    this.AT_TARGET = 0;\n    this.BUBBLING_PHASE = 0;\n    this.CAPTURING_PHASE = 0;\n    this.NONE = 0;\n    this.type = \"\";\n    this.srcElement = null;\n    this.currentTarget = null;\n    this.eventPhase = 0;\n    this.isTrusted = true;\n    this.composed = false;\n    this.cancelable = true;\n    this.defaultPrevented = false;\n    this.bubbles = true;\n    this.lengthComputable = true;\n    this.loaded = 0;\n    this.total = 0;\n    this.cancelBubble = false;\n    this.returnValue = true;\n    this.type = type;\n    this.target = (options == null ? void 0 : options.target) || null;\n    this.currentTarget = (options == null ? void 0 : options.currentTarget) || null;\n    this.timeStamp = Date.now();\n  }\n  composedPath() {\n    return [];\n  }\n  initEvent(type, bubbles, cancelable) {\n    this.type = type;\n    this.bubbles = !!bubbles;\n    this.cancelable = !!cancelable;\n  }\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n  stopPropagation() {\n  }\n  stopImmediatePropagation() {\n  }\n};\n\n// src/interceptors/XMLHttpRequest/polyfills/ProgressEventPolyfill.ts\nvar ProgressEventPolyfill = class extends EventPolyfill {\n  constructor(type, init) {\n    super(type);\n    this.lengthComputable = (init == null ? void 0 : init.lengthComputable) || false;\n    this.composed = (init == null ? void 0 : init.composed) || false;\n    this.loaded = (init == null ? void 0 : init.loaded) || 0;\n    this.total = (init == null ? void 0 : init.total) || 0;\n  }\n};\n\n// src/interceptors/XMLHttpRequest/utils/createEvent.ts\nvar SUPPORTS_PROGRESS_EVENT = typeof ProgressEvent !== \"undefined\";\nfunction createEvent(target, type, init) {\n  const progressEvents = [\n    \"error\",\n    \"progress\",\n    \"loadstart\",\n    \"loadend\",\n    \"load\",\n    \"timeout\",\n    \"abort\"\n  ];\n  const ProgressEventClass = SUPPORTS_PROGRESS_EVENT ? ProgressEvent : ProgressEventPolyfill;\n  const event = progressEvents.includes(type) ? new ProgressEventClass(type, {\n    lengthComputable: true,\n    loaded: (init == null ? void 0 : init.loaded) || 0,\n    total: (init == null ? void 0 : init.total) || 0\n  }) : new EventPolyfill(type, {\n    target,\n    currentTarget: target\n  });\n  return event;\n}\n\n// src/utils/findPropertySource.ts\nfunction findPropertySource(target, propertyName) {\n  if (!(propertyName in target)) {\n    return null;\n  }\n  const hasProperty = Object.prototype.hasOwnProperty.call(target, propertyName);\n  if (hasProperty) {\n    return target;\n  }\n  const prototype = Reflect.getPrototypeOf(target);\n  return prototype ? findPropertySource(prototype, propertyName) : null;\n}\n\n// src/utils/createProxy.ts\nfunction createProxy(target, options) {\n  const proxy = new Proxy(target, optionsToProxyHandler(options));\n  return proxy;\n}\nfunction optionsToProxyHandler(options) {\n  const { constructorCall, methodCall, getProperty, setProperty } = options;\n  const handler = {};\n  if (typeof constructorCall !== \"undefined\") {\n    handler.construct = function(target, args, newTarget) {\n      const next = Reflect.construct.bind(null, target, args, newTarget);\n      return constructorCall.call(newTarget, args, next);\n    };\n  }\n  handler.set = function(target, propertyName, nextValue) {\n    const next = () => {\n      const propertySource = findPropertySource(target, propertyName) || target;\n      const ownDescriptors = Reflect.getOwnPropertyDescriptor(\n        propertySource,\n        propertyName\n      );\n      if (typeof (ownDescriptors == null ? void 0 : ownDescriptors.set) !== \"undefined\") {\n        ownDescriptors.set.apply(target, [nextValue]);\n        return true;\n      }\n      return Reflect.defineProperty(propertySource, propertyName, {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: nextValue\n      });\n    };\n    if (typeof setProperty !== \"undefined\") {\n      return setProperty.call(target, [propertyName, nextValue], next);\n    }\n    return next();\n  };\n  handler.get = function(target, propertyName, receiver) {\n    const next = () => target[propertyName];\n    const value = typeof getProperty !== \"undefined\" ? getProperty.call(target, [propertyName, receiver], next) : next();\n    if (typeof value === \"function\") {\n      return (...args) => {\n        const next2 = value.bind(target, ...args);\n        if (typeof methodCall !== \"undefined\") {\n          return methodCall.call(target, [propertyName, args], next2);\n        }\n        return next2();\n      };\n    }\n    return value;\n  };\n  return handler;\n}\n\n// src/interceptors/XMLHttpRequest/utils/isDomParserSupportedType.ts\nfunction isDomParserSupportedType(type) {\n  const supportedTypes = [\n    \"application/xhtml+xml\",\n    \"application/xml\",\n    \"image/svg+xml\",\n    \"text/html\",\n    \"text/xml\"\n  ];\n  return supportedTypes.some((supportedType) => {\n    return type.startsWith(supportedType);\n  });\n}\n\n// src/utils/parseJson.ts\nfunction parseJson(data) {\n  try {\n    const json = JSON.parse(data);\n    return json;\n  } catch (_) {\n    return null;\n  }\n}\n\n// src/interceptors/XMLHttpRequest/utils/createResponse.ts\nfunction createResponse(request, body) {\n  const responseBodyOrNull = isResponseWithoutBody(request.status) ? null : body;\n  return new Response(responseBodyOrNull, {\n    status: request.status,\n    statusText: request.statusText,\n    headers: createHeadersFromXMLHttpReqestHeaders(\n      request.getAllResponseHeaders()\n    )\n  });\n}\nfunction createHeadersFromXMLHttpReqestHeaders(headersString) {\n  const headers = new Headers();\n  const lines = headersString.split(/[\\r\\n]+/);\n  for (const line of lines) {\n    if (line.trim() === \"\") {\n      continue;\n    }\n    const [name, ...parts] = line.split(\": \");\n    const value = parts.join(\": \");\n    headers.append(name, value);\n  }\n  return headers;\n}\n\n// src/interceptors/XMLHttpRequest/XMLHttpRequestController.ts\nvar IS_MOCKED_RESPONSE = Symbol(\"isMockedResponse\");\nvar IS_NODE = isNodeProcess();\nvar XMLHttpRequestController = class {\n  constructor(initialRequest, logger) {\n    this.initialRequest = initialRequest;\n    this.logger = logger;\n    this.method = \"GET\";\n    this.url = null;\n    this.events = /* @__PURE__ */ new Map();\n    this.requestId = uuidv4();\n    this.requestHeaders = new Headers();\n    this.responseBuffer = new Uint8Array();\n    this.request = createProxy(initialRequest, {\n      setProperty: ([propertyName, nextValue], invoke) => {\n        switch (propertyName) {\n          case \"ontimeout\": {\n            const eventName = propertyName.slice(\n              2\n            );\n            this.request.addEventListener(eventName, nextValue);\n            return invoke();\n          }\n          default: {\n            return invoke();\n          }\n        }\n      },\n      methodCall: ([methodName, args], invoke) => {\n        var _a;\n        switch (methodName) {\n          case \"open\": {\n            const [method, url] = args;\n            if (typeof url === \"undefined\") {\n              this.method = \"GET\";\n              this.url = toAbsoluteUrl(method);\n            } else {\n              this.method = method;\n              this.url = toAbsoluteUrl(url);\n            }\n            this.logger = this.logger.extend(`${this.method} ${this.url.href}`);\n            this.logger.info(\"open\", this.method, this.url.href);\n            return invoke();\n          }\n          case \"addEventListener\": {\n            const [eventName, listener] = args;\n            this.registerEvent(eventName, listener);\n            this.logger.info(\"addEventListener\", eventName, listener);\n            return invoke();\n          }\n          case \"setRequestHeader\": {\n            const [name, value] = args;\n            this.requestHeaders.set(name, value);\n            this.logger.info(\"setRequestHeader\", name, value);\n            return invoke();\n          }\n          case \"send\": {\n            const [body] = args;\n            if (body != null) {\n              this.requestBody = typeof body === \"string\" ? encodeBuffer(body) : body;\n            }\n            this.request.addEventListener(\"load\", () => {\n              if (typeof this.onResponse !== \"undefined\") {\n                const fetchResponse = createResponse(\n                  this.request,\n                  /**\n                   * The `response` property is the right way to read\n                   * the ambiguous response body, as the request's \"responseType\" may differ.\n                   * @see https://xhr.spec.whatwg.org/#the-response-attribute\n                   */\n                  this.request.response\n                );\n                this.onResponse.call(this, {\n                  response: fetchResponse,\n                  isMockedResponse: IS_MOCKED_RESPONSE in this.request,\n                  request: fetchRequest,\n                  requestId: this.requestId\n                });\n              }\n            });\n            const fetchRequest = this.toFetchApiRequest();\n            const onceRequestSettled = ((_a = this.onRequest) == null ? void 0 : _a.call(this, {\n              request: fetchRequest,\n              requestId: this.requestId\n            })) || Promise.resolve();\n            onceRequestSettled.finally(() => {\n              if (this.request.readyState < this.request.LOADING) {\n                this.logger.info(\n                  \"request callback settled but request has not been handled (readystate %d), performing as-is...\",\n                  this.request.readyState\n                );\n                if (IS_NODE) {\n                  this.request.setRequestHeader(\"X-Request-Id\", this.requestId);\n                }\n                return invoke();\n              }\n            });\n            break;\n          }\n          default: {\n            return invoke();\n          }\n        }\n      }\n    });\n  }\n  registerEvent(eventName, listener) {\n    const prevEvents = this.events.get(eventName) || [];\n    const nextEvents = prevEvents.concat(listener);\n    this.events.set(eventName, nextEvents);\n    this.logger.info('registered event \"%s\"', eventName, listener);\n  }\n  /**\n   * Responds to the current request with the given\n   * Fetch API `Response` instance.\n   */\n  respondWith(response) {\n    this.logger.info(\n      \"responding with a mocked response: %d %s\",\n      response.status,\n      response.statusText\n    );\n    define(this.request, IS_MOCKED_RESPONSE, true);\n    define(this.request, \"status\", response.status);\n    define(this.request, \"statusText\", response.statusText);\n    define(this.request, \"responseURL\", this.url.href);\n    this.request.getResponseHeader = new Proxy(this.request.getResponseHeader, {\n      apply: (_, __, args) => {\n        this.logger.info(\"getResponseHeader\", args[0]);\n        if (this.request.readyState < this.request.HEADERS_RECEIVED) {\n          this.logger.info(\"headers not received yet, returning null\");\n          return null;\n        }\n        const headerValue = response.headers.get(args[0]);\n        this.logger.info(\n          'resolved response header \"%s\" to',\n          args[0],\n          headerValue\n        );\n        return headerValue;\n      }\n    });\n    this.request.getAllResponseHeaders = new Proxy(\n      this.request.getAllResponseHeaders,\n      {\n        apply: () => {\n          this.logger.info(\"getAllResponseHeaders\");\n          if (this.request.readyState < this.request.HEADERS_RECEIVED) {\n            this.logger.info(\"headers not received yet, returning empty string\");\n            return \"\";\n          }\n          const headersList = Array.from(response.headers.entries());\n          const allHeaders = headersList.map(([headerName, headerValue]) => {\n            return `${headerName}: ${headerValue}`;\n          }).join(\"\\r\\n\");\n          this.logger.info(\"resolved all response headers to\", allHeaders);\n          return allHeaders;\n        }\n      }\n    );\n    Object.defineProperties(this.request, {\n      response: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.response\n      },\n      responseText: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.responseText\n      },\n      responseXML: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.responseXML\n      }\n    });\n    const totalResponseBodyLength = response.headers.has(\"Content-Length\") ? Number(response.headers.get(\"Content-Length\")) : (\n      /**\n       * @todo Infer the response body length from the response body.\n       */\n      void 0\n    );\n    this.logger.info(\"calculated response body length\", totalResponseBodyLength);\n    this.trigger(\"loadstart\", {\n      loaded: 0,\n      total: totalResponseBodyLength\n    });\n    this.setReadyState(this.request.HEADERS_RECEIVED);\n    this.setReadyState(this.request.LOADING);\n    const finalizeResponse = () => {\n      this.logger.info(\"finalizing the mocked response...\");\n      this.setReadyState(this.request.DONE);\n      this.trigger(\"load\", {\n        loaded: this.responseBuffer.byteLength,\n        total: totalResponseBodyLength\n      });\n      this.trigger(\"loadend\", {\n        loaded: this.responseBuffer.byteLength,\n        total: totalResponseBodyLength\n      });\n    };\n    if (response.body) {\n      this.logger.info(\"mocked response has body, streaming...\");\n      const reader = response.body.getReader();\n      const readNextResponseBodyChunk = async () => {\n        const { value, done } = await reader.read();\n        if (done) {\n          this.logger.info(\"response body stream done!\");\n          finalizeResponse();\n          return;\n        }\n        if (value) {\n          this.logger.info(\"read response body chunk:\", value);\n          this.responseBuffer = concatArrayBuffer(this.responseBuffer, value);\n          this.trigger(\"progress\", {\n            loaded: this.responseBuffer.byteLength,\n            total: totalResponseBodyLength\n          });\n        }\n        readNextResponseBodyChunk();\n      };\n      readNextResponseBodyChunk();\n    } else {\n      finalizeResponse();\n    }\n  }\n  responseBufferToText() {\n    return decodeBuffer(this.responseBuffer);\n  }\n  get response() {\n    this.logger.info(\n      \"getResponse (responseType: %s)\",\n      this.request.responseType\n    );\n    if (this.request.readyState !== this.request.DONE) {\n      return null;\n    }\n    switch (this.request.responseType) {\n      case \"json\": {\n        const responseJson = parseJson(this.responseBufferToText());\n        this.logger.info(\"resolved response JSON\", responseJson);\n        return responseJson;\n      }\n      case \"arraybuffer\": {\n        const arrayBuffer = toArrayBuffer(this.responseBuffer);\n        this.logger.info(\"resolved response ArrayBuffer\", arrayBuffer);\n        return arrayBuffer;\n      }\n      case \"blob\": {\n        const mimeType = this.request.getResponseHeader(\"Content-Type\") || \"text/plain\";\n        const responseBlob = new Blob([this.responseBufferToText()], {\n          type: mimeType\n        });\n        this.logger.info(\n          \"resolved response Blob (mime type: %s)\",\n          responseBlob,\n          mimeType\n        );\n        return responseBlob;\n      }\n      default: {\n        const responseText = this.responseBufferToText();\n        this.logger.info(\n          'resolving \"%s\" response type as text',\n          this.request.responseType,\n          responseText\n        );\n        return responseText;\n      }\n    }\n  }\n  get responseText() {\n    invariant(\n      this.request.responseType === \"\" || this.request.responseType === \"text\",\n      \"InvalidStateError: The object is in invalid state.\"\n    );\n    if (this.request.readyState !== this.request.LOADING && this.request.readyState !== this.request.DONE) {\n      return \"\";\n    }\n    const responseText = this.responseBufferToText();\n    this.logger.info('getResponseText: \"%s\"', responseText);\n    return responseText;\n  }\n  get responseXML() {\n    invariant(\n      this.request.responseType === \"\" || this.request.responseType === \"document\",\n      \"InvalidStateError: The object is in invalid state.\"\n    );\n    if (this.request.readyState !== this.request.DONE) {\n      return null;\n    }\n    const contentType = this.request.getResponseHeader(\"Content-Type\") || \"\";\n    if (typeof DOMParser === \"undefined\") {\n      console.warn(\n        \"Cannot retrieve XMLHttpRequest response body as XML: DOMParser is not defined. You are likely using an environment that is not browser or does not polyfill browser globals correctly.\"\n      );\n      return null;\n    }\n    if (isDomParserSupportedType(contentType)) {\n      return new DOMParser().parseFromString(\n        this.responseBufferToText(),\n        contentType\n      );\n    }\n    return null;\n  }\n  errorWith(error) {\n    this.logger.info(\"responding with an error\");\n    this.setReadyState(this.request.DONE);\n    this.trigger(\"error\");\n    this.trigger(\"loadend\");\n  }\n  /**\n   * Transitions this request's `readyState` to the given one.\n   */\n  setReadyState(nextReadyState) {\n    this.logger.info(\n      \"setReadyState: %d -> %d\",\n      this.request.readyState,\n      nextReadyState\n    );\n    if (this.request.readyState === nextReadyState) {\n      this.logger.info(\"ready state identical, skipping transition...\");\n      return;\n    }\n    define(this.request, \"readyState\", nextReadyState);\n    this.logger.info(\"set readyState to: %d\", nextReadyState);\n    if (nextReadyState !== this.request.UNSENT) {\n      this.logger.info('triggerring \"readystatechange\" event...');\n      this.trigger(\"readystatechange\");\n    }\n  }\n  /**\n   * Triggers given event on the `XMLHttpRequest` instance.\n   */\n  trigger(eventName, options) {\n    const callback = this.request[`on${eventName}`];\n    const event = createEvent(this.request, eventName, options);\n    this.logger.info('trigger \"%s\"', eventName, options || \"\");\n    if (typeof callback === \"function\") {\n      this.logger.info('found a direct \"%s\" callback, calling...', eventName);\n      callback.call(this.request, event);\n    }\n    for (const [registeredEventName, listeners] of this.events) {\n      if (registeredEventName === eventName) {\n        this.logger.info(\n          'found %d listener(s) for \"%s\" event, calling...',\n          listeners.length,\n          eventName\n        );\n        listeners.forEach((listener) => listener.call(this.request, event));\n      }\n    }\n  }\n  /**\n   * Converts this `XMLHttpRequest` instance into a Fetch API `Request` instance.\n   */\n  toFetchApiRequest() {\n    this.logger.info(\"converting request to a Fetch API Request...\");\n    const fetchRequest = new Request(this.url.href, {\n      method: this.method,\n      headers: this.requestHeaders,\n      /**\n       * @see https://xhr.spec.whatwg.org/#cross-origin-credentials\n       */\n      credentials: this.request.withCredentials ? \"include\" : \"same-origin\",\n      body: [\"GET\", \"HEAD\"].includes(this.method) ? null : this.requestBody\n    });\n    const proxyHeaders = createProxy(fetchRequest.headers, {\n      methodCall: ([methodName, args], invoke) => {\n        switch (methodName) {\n          case \"append\":\n          case \"set\": {\n            const [headerName, headerValue] = args;\n            this.request.setRequestHeader(headerName, headerValue);\n            break;\n          }\n          case \"delete\": {\n            const [headerName] = args;\n            console.warn(\n              `XMLHttpRequest: Cannot remove a \"${headerName}\" header from the Fetch API representation of the \"${fetchRequest.method} ${fetchRequest.url}\" request. XMLHttpRequest headers cannot be removed.`\n            );\n            break;\n          }\n        }\n        return invoke();\n      }\n    });\n    define(fetchRequest, \"headers\", proxyHeaders);\n    this.logger.info(\"converted request to a Fetch API Request!\", fetchRequest);\n    return fetchRequest;\n  }\n};\nfunction toAbsoluteUrl(url) {\n  if (typeof location === \"undefined\") {\n    return new URL(url);\n  }\n  return new URL(url.toString(), location.href);\n}\nfunction define(target, property, value) {\n  Reflect.defineProperty(target, property, {\n    // Ensure writable properties to allow redefining readonly properties.\n    writable: true,\n    enumerable: true,\n    value\n  });\n}\n\n// src/interceptors/XMLHttpRequest/XMLHttpRequestProxy.ts\nfunction createXMLHttpRequestProxy({\n  emitter,\n  logger\n}) {\n  const XMLHttpRequestProxy = new Proxy(globalThis.XMLHttpRequest, {\n    construct(target, args, newTarget) {\n      logger.info(\"constructed new XMLHttpRequest\");\n      const originalRequest = Reflect.construct(target, args, newTarget);\n      const prototypeDescriptors = Object.getOwnPropertyDescriptors(\n        target.prototype\n      );\n      for (const propertyName in prototypeDescriptors) {\n        Reflect.defineProperty(\n          originalRequest,\n          propertyName,\n          prototypeDescriptors[propertyName]\n        );\n      }\n      const xhrRequestController = new XMLHttpRequestController(\n        originalRequest,\n        logger\n      );\n      xhrRequestController.onRequest = async function({ request, requestId }) {\n        const { interactiveRequest, requestController } = toInteractiveRequest(request);\n        this.logger.info(\"awaiting mocked response...\");\n        emitter.once(\"request\", ({ requestId: pendingRequestId }) => {\n          if (pendingRequestId !== requestId) {\n            return;\n          }\n          if (requestController.responsePromise.state === \"pending\") {\n            requestController.respondWith(void 0);\n          }\n        });\n        const resolverResult = await until(async () => {\n          this.logger.info(\n            'emitting the \"request\" event for %s listener(s)...',\n            emitter.listenerCount(\"request\")\n          );\n          await emitAsync(emitter, \"request\", {\n            request: interactiveRequest,\n            requestId\n          });\n          this.logger.info('all \"request\" listeners settled!');\n          const mockedResponse2 = await requestController.responsePromise;\n          this.logger.info(\"event.respondWith called with:\", mockedResponse2);\n          return mockedResponse2;\n        });\n        if (resolverResult.error) {\n          this.logger.info(\n            \"request listener threw an exception, aborting request...\",\n            resolverResult.error\n          );\n          xhrRequestController.errorWith(resolverResult.error);\n          return;\n        }\n        const mockedResponse = resolverResult.data;\n        if (typeof mockedResponse !== \"undefined\") {\n          this.logger.info(\n            \"received mocked response: %d %s\",\n            mockedResponse.status,\n            mockedResponse.statusText\n          );\n          if (mockedResponse.type === \"error\") {\n            this.logger.info(\n              \"received a network error response, rejecting the request promise...\"\n            );\n            xhrRequestController.errorWith(new TypeError(\"Network error\"));\n            return;\n          }\n          return xhrRequestController.respondWith(mockedResponse);\n        }\n        this.logger.info(\n          \"no mocked response received, performing request as-is...\"\n        );\n      };\n      xhrRequestController.onResponse = async function({\n        response,\n        isMockedResponse,\n        request,\n        requestId\n      }) {\n        this.logger.info(\n          'emitting the \"response\" event for %s listener(s)...',\n          emitter.listenerCount(\"response\")\n        );\n        emitter.emit(\"response\", {\n          response,\n          isMockedResponse,\n          request,\n          requestId\n        });\n      };\n      return xhrRequestController.request;\n    }\n  });\n  return XMLHttpRequestProxy;\n}\n\n// src/interceptors/XMLHttpRequest/index.ts\nvar _XMLHttpRequestInterceptor = class extends Interceptor {\n  constructor() {\n    super(_XMLHttpRequestInterceptor.interceptorSymbol);\n  }\n  checkEnvironment() {\n    return typeof globalThis.XMLHttpRequest !== \"undefined\";\n  }\n  setup() {\n    const logger = this.logger.extend(\"setup\");\n    logger.info('patching \"XMLHttpRequest\" module...');\n    const PureXMLHttpRequest = globalThis.XMLHttpRequest;\n    invariant2(\n      !PureXMLHttpRequest[IS_PATCHED_MODULE],\n      'Failed to patch the \"XMLHttpRequest\" module: already patched.'\n    );\n    globalThis.XMLHttpRequest = createXMLHttpRequestProxy({\n      emitter: this.emitter,\n      logger: this.logger\n    });\n    logger.info(\n      'native \"XMLHttpRequest\" module patched!',\n      globalThis.XMLHttpRequest.name\n    );\n    Object.defineProperty(globalThis.XMLHttpRequest, IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true\n    });\n    this.subscriptions.push(() => {\n      Object.defineProperty(globalThis.XMLHttpRequest, IS_PATCHED_MODULE, {\n        value: void 0\n      });\n      globalThis.XMLHttpRequest = PureXMLHttpRequest;\n      logger.info(\n        'native \"XMLHttpRequest\" module restored!',\n        globalThis.XMLHttpRequest.name\n      );\n    });\n  }\n};\nvar XMLHttpRequestInterceptor = _XMLHttpRequestInterceptor;\nXMLHttpRequestInterceptor.interceptorSymbol = Symbol(\"xhr\");\n\nexport {\n  XMLHttpRequestInterceptor\n};\n", "var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/browser/setupWorker/setupWorker.ts\nimport { invariant } from \"outvariant\";\nimport { isNodeProcess } from \"is-node-process\";\n\n// src/browser/setupWorker/start/createStartHandler.ts\nimport { until as until3 } from \"@open-draft/until\";\nimport { devUtils as devUtils6 } from '../core/utils/internal/devUtils.mjs';\n\n// src/browser/setupWorker/start/utils/getWorkerInstance.ts\nimport { until } from \"@open-draft/until\";\nimport { devUtils } from '../core/utils/internal/devUtils.mjs';\n\n// src/browser/utils/getAbsoluteWorkerUrl.ts\nfunction getAbsoluteWorkerUrl(workerUrl) {\n  return new URL(workerUrl, location.href).href;\n}\n\n// src/browser/setupWorker/start/utils/getWorkerByRegistration.ts\nfunction getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker) {\n  const allStates = [\n    registration.active,\n    registration.installing,\n    registration.waiting\n  ];\n  const relevantStates = allStates.filter((state) => {\n    return state != null;\n  });\n  const worker = relevantStates.find((worker2) => {\n    return findWorker(worker2.scriptURL, absoluteWorkerUrl);\n  });\n  return worker || null;\n}\n\n// src/browser/setupWorker/start/utils/getWorkerInstance.ts\nvar getWorkerInstance = (_0, ..._1) => __async(void 0, [_0, ..._1], function* (url, options = {}, findWorker) {\n  const absoluteWorkerUrl = getAbsoluteWorkerUrl(url);\n  const mockRegistrations = yield navigator.serviceWorker.getRegistrations().then(\n    (registrations) => registrations.filter(\n      (registration) => getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker)\n    )\n  );\n  if (!navigator.serviceWorker.controller && mockRegistrations.length > 0) {\n    location.reload();\n  }\n  const [existingRegistration] = mockRegistrations;\n  if (existingRegistration) {\n    return existingRegistration.update().then(() => {\n      return [\n        getWorkerByRegistration(\n          existingRegistration,\n          absoluteWorkerUrl,\n          findWorker\n        ),\n        existingRegistration\n      ];\n    });\n  }\n  const registrationResult = yield until(\n    () => __async(void 0, null, function* () {\n      const registration = yield navigator.serviceWorker.register(url, options);\n      return [\n        // Compare existing worker registration by its worker URL,\n        // to prevent irrelevant workers to resolve here (such as Codesandbox worker).\n        getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker),\n        registration\n      ];\n    })\n  );\n  if (registrationResult.error) {\n    const isWorkerMissing = registrationResult.error.message.includes(\"(404)\");\n    if (isWorkerMissing) {\n      const scopeUrl = new URL((options == null ? void 0 : options.scope) || \"/\", location.href);\n      throw new Error(\n        devUtils.formatMessage(`Failed to register a Service Worker for scope ('${scopeUrl.href}') with script ('${absoluteWorkerUrl}'): Service Worker script does not exist at the given path.\n\nDid you forget to run \"npx msw init <PUBLIC_DIR>\"?\n\nLearn more about creating the Service Worker script: https://mswjs.io/docs/cli/init`)\n      );\n    }\n    throw new Error(\n      devUtils.formatMessage(\n        \"Failed to register the Service Worker:\\n\\n%s\",\n        registrationResult.error.message\n      )\n    );\n  }\n  return registrationResult.data;\n});\n\n// src/browser/setupWorker/start/utils/enableMocking.ts\nimport { devUtils as devUtils3 } from '../core/utils/internal/devUtils.mjs';\n\n// src/browser/setupWorker/start/utils/printStartMessage.ts\nimport { devUtils as devUtils2 } from '../core/utils/internal/devUtils.mjs';\nfunction printStartMessage(args = {}) {\n  if (args.quiet) {\n    return;\n  }\n  const message = args.message || \"Mocking enabled.\";\n  console.groupCollapsed(\n    `%c${devUtils2.formatMessage(message)}`,\n    \"color:orangered;font-weight:bold;\"\n  );\n  console.log(\n    \"%cDocumentation: %chttps://mswjs.io/docs\",\n    \"font-weight:bold\",\n    \"font-weight:normal\"\n  );\n  console.log(\"Found an issue? https://github.com/mswjs/msw/issues\");\n  if (args.workerUrl) {\n    console.log(\"Worker script URL:\", args.workerUrl);\n  }\n  if (args.workerScope) {\n    console.log(\"Worker scope:\", args.workerScope);\n  }\n  console.groupEnd();\n}\n\n// src/browser/setupWorker/start/utils/enableMocking.ts\nfunction enableMocking(context, options) {\n  return __async(this, null, function* () {\n    var _a, _b;\n    context.workerChannel.send(\"MOCK_ACTIVATE\");\n    yield context.events.once(\"MOCKING_ENABLED\");\n    if (context.isMockingEnabled) {\n      devUtils3.warn(\n        `Found a redundant \"worker.start()\" call. Note that starting the worker while mocking is already enabled will have no effect. Consider removing this \"worker.start()\" call.`\n      );\n      return;\n    }\n    context.isMockingEnabled = true;\n    printStartMessage({\n      quiet: options.quiet,\n      workerScope: (_a = context.registration) == null ? void 0 : _a.scope,\n      workerUrl: (_b = context.worker) == null ? void 0 : _b.scriptURL\n    });\n  });\n}\n\n// src/browser/setupWorker/start/utils/createMessageChannel.ts\nvar WorkerChannel = class {\n  constructor(port) {\n    this.port = port;\n  }\n  postMessage(event, ...rest) {\n    const [data, transfer] = rest;\n    this.port.postMessage({ type: event, data }, { transfer });\n  }\n};\n\n// src/browser/utils/pruneGetRequestBody.ts\nfunction pruneGetRequestBody(request) {\n  if ([\"HEAD\", \"GET\"].includes(request.method)) {\n    return void 0;\n  }\n  return request.body;\n}\n\n// src/browser/utils/parseWorkerRequest.ts\nfunction parseWorkerRequest(incomingRequest) {\n  return new Request(incomingRequest.url, __spreadProps(__spreadValues({}, incomingRequest), {\n    body: pruneGetRequestBody(incomingRequest)\n  }));\n}\n\n// src/browser/setupWorker/start/createRequestListener.ts\nimport { handleRequest } from '../core/utils/handleRequest.mjs';\nimport { devUtils as devUtils4 } from '../core/utils/internal/devUtils.mjs';\nimport { toResponseInit } from '../core/utils/toResponseInit.mjs';\nvar createRequestListener = (context, options) => {\n  return (event, message) => __async(void 0, null, function* () {\n    var _b;\n    const messageChannel = new WorkerChannel(event.ports[0]);\n    const requestId = message.payload.id;\n    const request = parseWorkerRequest(message.payload);\n    const requestCloneForLogs = request.clone();\n    try {\n      let _a;\n      yield handleRequest(\n        request,\n        requestId,\n        context.requestHandlers,\n        options,\n        context.emitter,\n        {\n          onPassthroughResponse() {\n            messageChannel.postMessage(\"NOT_FOUND\");\n          },\n          onMockedResponse(_0, _1) {\n            return __async(this, arguments, function* (response, { handler, parsedResult }) {\n              const responseClone = response.clone();\n              const responseCloneForLogs = response.clone();\n              const responseInit = toResponseInit(response);\n              if (context.supports.readableStreamTransfer) {\n                const responseStreamOrNull = response.body;\n                messageChannel.postMessage(\n                  \"MOCK_RESPONSE\",\n                  __spreadProps(__spreadValues({}, responseInit), {\n                    body: responseStreamOrNull\n                  }),\n                  responseStreamOrNull ? [responseStreamOrNull] : void 0\n                );\n              } else {\n                const responseBufferOrNull = response.body === null ? null : yield responseClone.arrayBuffer();\n                messageChannel.postMessage(\"MOCK_RESPONSE\", __spreadProps(__spreadValues({}, responseInit), {\n                  body: responseBufferOrNull\n                }));\n              }\n              if (!options.quiet) {\n                context.emitter.once(\"response:mocked\", () => {\n                  handler.log({\n                    request: requestCloneForLogs,\n                    response: responseCloneForLogs,\n                    parsedResult\n                  });\n                });\n              }\n            });\n          }\n        }\n      );\n    } catch (error) {\n      if (error instanceof Error) {\n        devUtils4.error(\n          `Uncaught exception in the request handler for \"%s %s\":\n\n%s\n\nThis exception has been gracefully handled as a 500 response, however, it's strongly recommended to resolve this error, as it indicates a mistake in your code. If you wish to mock an error response, please see this guide: https://mswjs.io/docs/recipes/mocking-error-responses`,\n          request.method,\n          request.url,\n          (_b = error.stack) != null ? _b : error\n        );\n        messageChannel.postMessage(\"MOCK_RESPONSE\", {\n          status: 500,\n          statusText: \"Request Handler Error\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: error.name,\n            message: error.message,\n            stack: error.stack\n          })\n        });\n      }\n    }\n  });\n};\n\n// src/browser/utils/requestIntegrityCheck.ts\nfunction requestIntegrityCheck(context, serviceWorker) {\n  return __async(this, null, function* () {\n    context.workerChannel.send(\"INTEGRITY_CHECK_REQUEST\");\n    const { payload: actualChecksum } = yield context.events.once(\n      \"INTEGRITY_CHECK_RESPONSE\"\n    );\n    if (actualChecksum !== \"c5f7f8e188b673ea4e677df7ea3c5a39\") {\n      throw new Error(\n        `Currently active Service Worker (${actualChecksum}) is behind the latest published one (${\"c5f7f8e188b673ea4e677df7ea3c5a39\"}).`\n      );\n    }\n    return serviceWorker;\n  });\n}\n\n// src/browser/utils/deferNetworkRequestsUntil.ts\nimport { until as until2 } from \"@open-draft/until\";\nfunction deferNetworkRequestsUntil(predicatePromise) {\n  const originalXhrSend = window.XMLHttpRequest.prototype.send;\n  window.XMLHttpRequest.prototype.send = function(...args) {\n    until2(() => predicatePromise).then(() => {\n      window.XMLHttpRequest.prototype.send = originalXhrSend;\n      this.send(...args);\n    });\n  };\n  const originalFetch = window.fetch;\n  window.fetch = (...args) => __async(this, null, function* () {\n    yield until2(() => predicatePromise);\n    window.fetch = originalFetch;\n    return window.fetch(...args);\n  });\n}\n\n// src/browser/setupWorker/start/createResponseListener.ts\nimport { isResponseWithoutBody } from \"@mswjs/interceptors\";\nfunction createResponseListener(context) {\n  return (_, message) => {\n    var _a;\n    const { payload: responseJson } = message;\n    if ((_a = responseJson.type) == null ? void 0 : _a.includes(\"opaque\")) {\n      return;\n    }\n    const response = responseJson.status === 0 ? Response.error() : new Response(\n      /**\n       * Responses may be streams here, but when we create a response object\n       * with null-body status codes, like 204, 205, 304 Response will\n       * throw when passed a non-null body, so ensure it's null here\n       * for those codes\n       */\n      isResponseWithoutBody(responseJson.status) ? null : responseJson.body,\n      responseJson\n    );\n    context.emitter.emit(\n      responseJson.isMockedResponse ? \"response:mocked\" : \"response:bypass\",\n      {\n        response,\n        /**\n         * @todo @fixme In this context, we don't know anything about\n         * the request.\n         */\n        request: null,\n        requestId: responseJson.requestId\n      }\n    );\n  };\n}\n\n// src/browser/setupWorker/start/utils/validateWorkerScope.ts\nimport { devUtils as devUtils5 } from '../core/utils/internal/devUtils.mjs';\nfunction validateWorkerScope(registration, options) {\n  if (!(options == null ? void 0 : options.quiet) && !location.href.startsWith(registration.scope)) {\n    devUtils5.warn(\n      `Cannot intercept requests on this page because it's outside of the worker's scope (\"${registration.scope}\"). If you wish to mock API requests on this page, you must resolve this scope issue.\n\n- (Recommended) Register the worker at the root level (\"/\") of your application.\n- Set the \"Service-Worker-Allowed\" response header to allow out-of-scope workers.`\n    );\n  }\n}\n\n// src/browser/setupWorker/start/createStartHandler.ts\nvar createStartHandler = (context) => {\n  return function start(options, customOptions) {\n    const startWorkerInstance = () => __async(this, null, function* () {\n      context.events.removeAllListeners();\n      context.workerChannel.on(\n        \"REQUEST\",\n        createRequestListener(context, options)\n      );\n      context.workerChannel.on(\"RESPONSE\", createResponseListener(context));\n      const instance = yield getWorkerInstance(\n        options.serviceWorker.url,\n        options.serviceWorker.options,\n        options.findWorker\n      );\n      const [worker, registration] = instance;\n      if (!worker) {\n        const missingWorkerMessage = (customOptions == null ? void 0 : customOptions.findWorker) ? devUtils6.formatMessage(\n          `Failed to locate the Service Worker registration using a custom \"findWorker\" predicate.\n\nPlease ensure that the custom predicate properly locates the Service Worker registration at \"%s\".\nMore details: https://mswjs.io/docs/api/setup-worker/start#findworker\n`,\n          options.serviceWorker.url\n        ) : devUtils6.formatMessage(\n          `Failed to locate the Service Worker registration.\n\nThis most likely means that the worker script URL \"%s\" cannot resolve against the actual public hostname (%s). This may happen if your application runs behind a proxy, or has a dynamic hostname.\n\nPlease consider using a custom \"serviceWorker.url\" option to point to the actual worker script location, or a custom \"findWorker\" option to resolve the Service Worker registration manually. More details: https://mswjs.io/docs/api/setup-worker/start`,\n          options.serviceWorker.url,\n          location.host\n        );\n        throw new Error(missingWorkerMessage);\n      }\n      context.worker = worker;\n      context.registration = registration;\n      context.events.addListener(window, \"beforeunload\", () => {\n        if (worker.state !== \"redundant\") {\n          context.workerChannel.send(\"CLIENT_CLOSED\");\n        }\n        window.clearInterval(context.keepAliveInterval);\n      });\n      const integrityCheckResult = yield until3(\n        () => requestIntegrityCheck(context, worker)\n      );\n      if (integrityCheckResult.error) {\n        devUtils6.error(`Detected outdated Service Worker: ${integrityCheckResult.error.message}\n\nThe mocking is still enabled, but it's highly recommended that you update your Service Worker by running:\n\n$ npx msw init <PUBLIC_DIR>\n\nThis is necessary to ensure that the Service Worker is in sync with the library to guarantee its stability.\nIf this message still persists after updating, please report an issue: https://github.com/open-draft/msw/issues      `);\n      }\n      context.keepAliveInterval = window.setInterval(\n        () => context.workerChannel.send(\"KEEPALIVE_REQUEST\"),\n        5e3\n      );\n      validateWorkerScope(registration, context.startOptions);\n      return registration;\n    });\n    const workerRegistration = startWorkerInstance().then(\n      (registration) => __async(this, null, function* () {\n        const pendingInstance = registration.installing || registration.waiting;\n        if (pendingInstance) {\n          yield new Promise((resolve) => {\n            pendingInstance.addEventListener(\"statechange\", () => {\n              if (pendingInstance.state === \"activated\") {\n                return resolve();\n              }\n            });\n          });\n        }\n        yield enableMocking(context, options).catch((error) => {\n          throw new Error(`Failed to enable mocking: ${error == null ? void 0 : error.message}`);\n        });\n        return registration;\n      })\n    );\n    if (options.waitUntilReady) {\n      deferNetworkRequestsUntil(workerRegistration);\n    }\n    return workerRegistration;\n  };\n};\n\n// src/browser/setupWorker/stop/createStop.ts\nimport { devUtils as devUtils8 } from '../core/utils/internal/devUtils.mjs';\n\n// src/browser/setupWorker/stop/utils/printStopMessage.ts\nimport { devUtils as devUtils7 } from '../core/utils/internal/devUtils.mjs';\nfunction printStopMessage(args = {}) {\n  if (args.quiet) {\n    return;\n  }\n  console.log(\n    `%c${devUtils7.formatMessage(\"Mocking disabled.\")}`,\n    \"color:orangered;font-weight:bold;\"\n  );\n}\n\n// src/browser/setupWorker/stop/createStop.ts\nvar createStop = (context) => {\n  return function stop() {\n    var _a;\n    if (!context.isMockingEnabled) {\n      devUtils8.warn(\n        'Found a redundant \"worker.stop()\" call. Note that stopping the worker while mocking already stopped has no effect. Consider removing this \"worker.stop()\" call.'\n      );\n      return;\n    }\n    context.workerChannel.send(\"MOCK_DEACTIVATE\");\n    context.isMockingEnabled = false;\n    window.clearInterval(context.keepAliveInterval);\n    printStopMessage({ quiet: (_a = context.startOptions) == null ? void 0 : _a.quiet });\n  };\n};\n\n// src/browser/setupWorker/start/utils/prepareStartHandler.ts\nimport { mergeRight } from '../core/utils/internal/mergeRight.mjs';\nvar DEFAULT_START_OPTIONS = {\n  serviceWorker: {\n    url: \"/mockServiceWorker.js\",\n    options: null\n  },\n  quiet: false,\n  waitUntilReady: true,\n  onUnhandledRequest: \"warn\",\n  findWorker(scriptURL, mockServiceWorkerUrl) {\n    return scriptURL === mockServiceWorkerUrl;\n  }\n};\n\n// src/browser/setupWorker/start/createFallbackRequestListener.ts\nimport {\n  BatchInterceptor\n} from \"@mswjs/interceptors\";\nimport { FetchInterceptor } from \"@mswjs/interceptors/fetch\";\nimport { XMLHttpRequestInterceptor } from \"@mswjs/interceptors/XMLHttpRequest\";\nimport { handleRequest as handleRequest2 } from '../core/utils/handleRequest.mjs';\nfunction createFallbackRequestListener(context, options) {\n  const interceptor = new BatchInterceptor({\n    name: \"fallback\",\n    interceptors: [new FetchInterceptor(), new XMLHttpRequestInterceptor()]\n  });\n  interceptor.on(\"request\", (_0) => __async(this, [_0], function* ({ request, requestId }) {\n    const requestCloneForLogs = request.clone();\n    const response = yield handleRequest2(\n      request,\n      requestId,\n      context.requestHandlers,\n      options,\n      context.emitter,\n      {\n        onMockedResponse(_, { handler, parsedResult }) {\n          if (!options.quiet) {\n            context.emitter.once(\"response:mocked\", ({ response: response2 }) => {\n              handler.log({\n                request: requestCloneForLogs,\n                response: response2,\n                parsedResult\n              });\n            });\n          }\n        }\n      }\n    );\n    if (response) {\n      request.respondWith(response);\n    }\n  }));\n  interceptor.on(\n    \"response\",\n    ({ response, isMockedResponse, request, requestId }) => {\n      context.emitter.emit(\n        isMockedResponse ? \"response:mocked\" : \"response:bypass\",\n        {\n          response,\n          request,\n          requestId\n        }\n      );\n    }\n  );\n  interceptor.apply();\n  return interceptor;\n}\n\n// src/browser/setupWorker/start/createFallbackStart.ts\nfunction createFallbackStart(context) {\n  return function start(options) {\n    return __async(this, null, function* () {\n      context.fallbackInterceptor = createFallbackRequestListener(\n        context,\n        options\n      );\n      printStartMessage({\n        message: \"Mocking enabled (fallback mode).\",\n        quiet: options.quiet\n      });\n      return void 0;\n    });\n  };\n}\n\n// src/browser/setupWorker/stop/createFallbackStop.ts\nfunction createFallbackStop(context) {\n  return function stop() {\n    var _a, _b;\n    (_a = context.fallbackInterceptor) == null ? void 0 : _a.dispose();\n    printStopMessage({ quiet: (_b = context.startOptions) == null ? void 0 : _b.quiet });\n  };\n}\n\n// src/browser/setupWorker/setupWorker.ts\nimport { devUtils as devUtils9 } from '../core/utils/internal/devUtils.mjs';\nimport { SetupApi } from '../core/SetupApi.mjs';\nimport { mergeRight as mergeRight2 } from '../core/utils/internal/mergeRight.mjs';\n\n// src/browser/utils/supportsReadableStreamTransfer.ts\nfunction supportsReadableStreamTransfer() {\n  try {\n    const stream = new ReadableStream({\n      start: (controller) => controller.close()\n    });\n    const message = new MessageChannel();\n    message.port1.postMessage(stream, [stream]);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\n// src/browser/setupWorker/setupWorker.ts\nvar SetupWorkerApi = class extends SetupApi {\n  constructor(...handlers) {\n    super(...handlers);\n    this.startHandler = null;\n    this.stopHandler = null;\n    invariant(\n      !isNodeProcess(),\n      devUtils9.formatMessage(\n        \"Failed to execute `setupWorker` in a non-browser environment. Consider using `setupServer` for Node.js environment instead.\"\n      )\n    );\n    this.listeners = [];\n    this.context = this.createWorkerContext();\n  }\n  createWorkerContext() {\n    const context = {\n      // Mocking is not considered enabled until the worker\n      // signals back the successful activation event.\n      isMockingEnabled: false,\n      startOptions: null,\n      worker: null,\n      registration: null,\n      requestHandlers: this.currentHandlers,\n      emitter: this.emitter,\n      workerChannel: {\n        on: (eventType, callback) => {\n          this.context.events.addListener(navigator.serviceWorker, \"message\", (event) => {\n            if (event.source !== this.context.worker) {\n              return;\n            }\n            const message = event.data;\n            if (!message) {\n              return;\n            }\n            if (message.type === eventType) {\n              callback(event, message);\n            }\n          });\n        },\n        send: (type) => {\n          var _a;\n          (_a = this.context.worker) == null ? void 0 : _a.postMessage(type);\n        }\n      },\n      events: {\n        addListener: (target, eventType, callback) => {\n          target.addEventListener(eventType, callback);\n          this.listeners.push({\n            eventType,\n            target,\n            callback\n          });\n          return () => {\n            target.removeEventListener(eventType, callback);\n          };\n        },\n        removeAllListeners: () => {\n          for (const { target, eventType, callback } of this.listeners) {\n            target.removeEventListener(eventType, callback);\n          }\n          this.listeners = [];\n        },\n        once: (eventType) => {\n          const bindings = [];\n          return new Promise((resolve, reject) => {\n            const handleIncomingMessage = (event) => {\n              try {\n                const message = event.data;\n                if (message.type === eventType) {\n                  resolve(message);\n                }\n              } catch (error) {\n                reject(error);\n              }\n            };\n            bindings.push(\n              this.context.events.addListener(\n                navigator.serviceWorker,\n                \"message\",\n                handleIncomingMessage\n              ),\n              this.context.events.addListener(\n                navigator.serviceWorker,\n                \"messageerror\",\n                reject\n              )\n            );\n          }).finally(() => {\n            bindings.forEach((unbind) => unbind());\n          });\n        }\n      },\n      supports: {\n        serviceWorkerApi: !(\"serviceWorker\" in navigator) || location.protocol === \"file:\",\n        readableStreamTransfer: supportsReadableStreamTransfer()\n      }\n    };\n    Object.defineProperties(context, {\n      requestHandlers: {\n        get: () => this.currentHandlers\n      }\n    });\n    this.startHandler = context.supports.serviceWorkerApi ? createFallbackStart(context) : createStartHandler(context);\n    this.stopHandler = context.supports.serviceWorkerApi ? createFallbackStop(context) : createStop(context);\n    return context;\n  }\n  start() {\n    return __async(this, arguments, function* (options = {}) {\n      this.context.startOptions = mergeRight2(\n        DEFAULT_START_OPTIONS,\n        options\n      );\n      return yield this.startHandler(this.context.startOptions, options);\n    });\n  }\n  stop() {\n    super.dispose();\n    this.context.events.removeAllListeners();\n    this.context.emitter.removeAllListeners();\n    this.stopHandler();\n  }\n};\nfunction setupWorker(...handlers) {\n  return new SetupWorkerApi(...handlers);\n}\nexport {\n  SetupWorkerApi,\n  setupWorker\n};\n"],
  "mappings": "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",
  "names": ["__async"]
}
